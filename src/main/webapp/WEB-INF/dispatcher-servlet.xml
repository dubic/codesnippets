<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
http://www.springframework.org/schema/beans    
http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
http://www.springframework.org/schema/task
http://www.springframework.org/schema/task/spring-task-4.0.xsd
http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
http://www.springframework.org/schema/context
	        http://www.springframework.org/schema/context/spring-context-4.0.xsd
	        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

    <context:component-scan base-package="com.dubic.codesnippets"/>
    
    <mvc:annotation-driven>
        <mvc:message-converters>
            <bean class="com.dubic.codesnippets.application.GsonMessageConverter"/>
        </mvc:message-converters>
    </mvc:annotation-driven>
    
    <mvc:resources mapping="/assets/**" location="/assets/" cache-period="31556926"/>
    <mvc:resources mapping="/resources/**" location="/resources/" cache-period="31556926"/>
    
    <mvc:view-controller path="/app" view-name="app"/>
    <mvc:view-controller path="/home" view-name="home"/>

    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/" />
        <property name="suffix" value=".jsp" />
    </bean>
    
    <!--//////////////////////////////////////////////////////////////////////////////////////-->
    <!--    database configuration-->
    <aop:aspectj-autoproxy />
    <task:annotation-driven executor="springExecutorService" scheduler="taskScheduler"/>
  
    <!--
    The 'executor' element:
    When a task is submitted, the executor will first
    try to use a free thread if the number of active threads is currently less than
    the core size. If the core size has been reached, then the task will be added
    to the queue as long as its capacity has not yet been reached. Only then,
    if the queue's capacity has been reached, will the executor create a new
    thread beyond the core size. If the max size has also been reached, then
    the executor will reject the task
    See: 25.4.2 The 'executor' element -->
    <!-- Defines a ThreadPoolTaskExecutor instance with configurable pool size, queue-capacity, keep-alive,
    and rejection-policy values. The id becomes the default thread name prefix -->
    <task:executor id="springExecutorService"
                   pool-size="5-25"
                   queue-capacity="100"/>
   
    <!-- Defines a ThreadPoolTaskScheduler instance with configurable pool size.
    The id becomes the default thread name prefix. -->             
    <task:scheduler id="taskScheduler" pool-size="1"/> 
  
     <context:property-placeholder location="file:///C:/usr/share/codesnippets/conf.properties"/>
   <!--<context:property-placeholder location="file:////usr/share/selfcare/conf.properties" />-->
    
    
    
    <bean id="velocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
        <property name="velocityProperties">
            <value>
                resource.loader=class
                class.resource.loader.class=org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
            </value>
        </property>
    </bean>
    
    
    <import resource="datasource.xml"/>
    <import resource="security.xml"/>
   
</beans>
